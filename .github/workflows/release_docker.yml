name: Release Docker
on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      dry_run:
        required: true
        type: boolean
        default: true
        description: 'DryRun?'

env:
  COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    name: Build Dockers

    steps:
      - uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc

      - name: Setting env var
        id: env_var
        shell: bash
        run: |
          echo "::set-output name=VERSION::$(node -e 'console.log(require("./package.json").version)')"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        # To push to github registry
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PERSONAL_GITHUB_TOKEN }}

      - name: Set up Docker QEMU for arm64 docker builds
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Build Image
        uses: docker/build-push-action@v3.0.0
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64 # buildx does not support multi-arch load
          push: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.dry_run != 'true') }}
          tags: |
            ghcr.io/bodinsamuel/renovate-automatic-branch:latest
            ghcr.io/bodinsamuel/renovate-automatic-branch:${{ steps.env_var.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.env_var.outputs.VERSION }}
